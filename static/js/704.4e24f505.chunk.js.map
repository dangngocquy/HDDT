{"version":3,"file":"static/js/704.4e24f505.chunk.js","mappings":"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","sources":["component/MST.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Form, Input, Button, message, Typography, ConfigProvider, Spin, Select, Empty } from 'antd';\r\nimport { PhoneOutlined, MailOutlined, EnvironmentOutlined, SecurityScanOutlined, FileTextOutlined, FrownOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst MST = React.memo(() => {\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n    const [showCompanyFields, setShowCompanyFields] = useState(false);\r\n    const [ALoading, setALoading] = useState(false);\r\n\r\n    const fetchCompanyInfo = useCallback(async (A) => {\r\n        if (!/^\\d{10}$/.test(A)) {\r\n            return;\r\n        }\r\n\r\n        setALoading(true);\r\n        try {\r\n            const response = await axios.get(`https://esgoo.net/api-mst/${A}.htm`);\r\n            const { data } = response.data;\r\n            if (data) {\r\n                form.setFieldsValue({\r\n                    company_name: data.ten,\r\n                    address: data.dc\r\n                });\r\n                setShowCompanyFields(true);\r\n            } else {\r\n                message.warning('Không tìm thấy thông tin công ty. Vui lòng nhập thông tin thủ công.');\r\n                setShowCompanyFields(true);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching company info:', error);\r\n            message.error('Không tìm thấy thông tin công ty !');\r\n            setShowCompanyFields(true);\r\n        } finally {\r\n            setALoading(false);\r\n        }\r\n    }, [form]);\r\n\r\n    const onFinish = useCallback((values) => {\r\n        setLoading(true);\r\n        // Viết API POST về Thái SƠn\r\n        setTimeout(() => {\r\n            console.log('Form values:', values);\r\n            message.success('Gửi thông tin thành công');\r\n            setLoading(false);\r\n            setCurrentStep(1);\r\n        }, 1000);\r\n    }, []);\r\n\r\n    const formContainerStyle = {\r\n        maxWidth: '600px',\r\n        margin: '0 auto',\r\n        padding: '20px',\r\n    };\r\n\r\n    const titleStyle = {\r\n        fontSize: '23px',\r\n        fontWeight: 'bold',\r\n        marginBottom: '20px',\r\n        textAlign: 'left',\r\n    };\r\n\r\n    const Header = React.memo(() => (\r\n        <div style={{ textAlign: 'left', marginBottom: '20px' }}>\r\n            <Title style={titleStyle}>THÔNG TIN XUẤT HÓA ĐƠN</Title>\r\n            <p style={{ lineHeight: 1.4, fontSize: 15 }}>Hóa đơn điện tử có mã xác thực của cơ quan thuế sẽ gởi về qua email</p>\r\n        </div>\r\n    ));\r\n\r\n    const Step1 = React.memo(() => {\r\n        const [A, setA] = useState('');\r\n\r\n        useEffect(() => {\r\n            if (A.length === 10) {\r\n                fetchCompanyInfo(A);\r\n            }\r\n        }, [A]);\r\n\r\n        return (\r\n            <Form\r\n                form={form}\r\n                onFinish={onFinish}\r\n                layout=\"vertical\"\r\n                requiredMark={false}\r\n            >\r\n                <Form.Item\r\n                    name=\"restaurant\"\r\n                    rules={[{ required: true, message: 'Vui lòng chọn nhà hàng' }]}\r\n                >\r\n                    <Select\r\n                        defaultValue=\"Chọn nhà hàng\"\r\n                        options={[\r\n                            {\r\n                                value: 'Test1',\r\n                                label: 'Test1',\r\n                            },\r\n                            {\r\n                                value: 'Test2',\r\n                                label: 'Test2',\r\n                            },\r\n                        ]}\r\n                        showSearch\r\n                        notFoundContent={\r\n                            <Empty\r\n                                image={<FrownOutlined style={{ fontSize: 60, marginBottom: 0 }}/>}\r\n                                description=\"Không tìm thấy nhà hàng\"\r\n                            />\r\n                        }\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"bill_number\"\r\n                    rules={[{ required: true, message: 'Vui lòng nhập số bill' }]}\r\n                >\r\n                    <Input prefix={<FileTextOutlined />} placeholder=\"Nhập số bill\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item name=\"phone\">\r\n                    <Input prefix={<PhoneOutlined />} placeholder=\"Nhập số điện thoại\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"tax_code\"\r\n                    rules={[\r\n                        { required: true, message: 'Vui lòng nhập mã số thuế' },\r\n                        { pattern: /^\\d{10}$/, message: 'Mã số thuế không đúng định dạng' }\r\n                    ]}\r\n                >\r\n                    <Input\r\n                        prefix={<SecurityScanOutlined />}\r\n                        placeholder=\"Nhập mã số thuế\"\r\n                        onChange={(e) => setA(e.target.value)}\r\n                        suffix={ALoading ? <Spin size=\"small\" /> : null}\r\n                    />\r\n                </Form.Item>\r\n\r\n                {showCompanyFields && (\r\n                    <>\r\n                        <Form.Item\r\n                            name=\"company_name\"\r\n                            rules={[{ required: true, message: 'Vui lòng nhập tên công ty' }]}\r\n                        >\r\n                            <Input\r\n                                placeholder=\"Nhập tên công ty\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"address\"\r\n                            rules={[{ required: true, message: 'Vui lòng nhập địa chỉ' }]}\r\n                        >\r\n                            <Input.TextArea\r\n                                prefix={<EnvironmentOutlined />}\r\n                                placeholder=\"Địa chỉ\"\r\n                                autoSize={{ minRows: 2, maxRows: 6 }}\r\n                                style={{ flex: 1 }}\r\n                            />\r\n                        </Form.Item>\r\n                    </>\r\n                )}\r\n\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                        { required: true, message: 'Vui lòng nhập email' },\r\n                        { type: 'email', message: 'Vui lòng nhập email hợp lệ' }\r\n                    ]}\r\n                >\r\n                    <Input prefix={<MailOutlined />} placeholder=\"Nhập email\" type='email' />\r\n                </Form.Item>\r\n\r\n                <Form.Item style={{ marginBottom: 0 }}>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        loading={loading}\r\n                        style={{ width: '100%', height: '40px' }}\r\n                    >\r\n                        Gửi thông tin\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    });\r\n\r\n    const Step2 = React.memo(() => (\r\n        <div>\r\n            <div>\r\n                <Title style={titleStyle}>HÓA ĐƠN ĐANG ĐƯỢC XỬ LÝ</Title>\r\n            </div>\r\n            <Paragraph style={{ fontSize: 16 }}>\r\n                Hóa đơn điện tử có mã xác thực của cơ quan thuế sẽ gửi về qua email.\r\n            </Paragraph>\r\n            <Paragraph style={{ fontSize: 16 }}>\r\n                Nếu bạn cần thêm thông tin hay hỗ trợ, xin liên hệ tới số điện thoại:<a href=\"tel:02871087088\" style={{ color: '#ae8f3d' }}> 02871 087 088</a>\r\n            </Paragraph>\r\n            <Button onClick={() => setCurrentStep(0)} style={{ marginTop: '0', paddingLeft: 0 }} type='link'>\r\n                ← Nhập bill khác\r\n            </Button>\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                token: {\r\n                    colorPrimary: '#ae8f3d',\r\n                },\r\n                components: {\r\n                    Button: {\r\n                        colorPrimary: '#ae8f3d',\r\n                        algorithm: true,\r\n                    },\r\n                    Input: {\r\n                        borderRadius: 4,\r\n                    },\r\n                    Select: {\r\n                        borderRadius: 4,\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <div className='header' >Phần Header Update</div>\r\n            <div style={formContainerStyle}>\r\n                {currentStep === 0 ? (\r\n                    <>\r\n                        <Header />\r\n                        <Step1 />\r\n                        <p style={{ color: 'red', fontSize: 13 }}>* Vui lòng kiểm tra thông tin chính xác trước khi gửi thông tin</p>\r\n                    </>\r\n                ) : (\r\n                    <Step2 />\r\n                )}\r\n            </div>\r\n        </ConfigProvider>\r\n    );\r\n});\r\n\r\nexport default MST;"],"names":["Title","Paragraph","Typography","React","form","Form","useForm","loading","setLoading","useState","currentStep","setCurrentStep","showCompanyFields","setShowCompanyFields","ALoading","setALoading","fetchCompanyInfo","useCallback","async","test","A","response","axios","get","data","setFieldsValue","company_name","ten","address","dc","message","warning","error","console","onFinish","values","setTimeout","log","success","titleStyle","fontSize","fontWeight","marginBottom","textAlign","Header","_jsxs","style","children","_jsx","lineHeight","Step1","setA","useEffect","length","layout","requiredMark","Item","name","rules","required","Select","defaultValue","options","value","label","showSearch","notFoundContent","Empty","image","FrownOutlined","description","Input","prefix","FileTextOutlined","placeholder","PhoneOutlined","pattern","SecurityScanOutlined","onChange","e","target","suffix","Spin","size","_Fragment","TextArea","EnvironmentOutlined","autoSize","minRows","maxRows","flex","type","MailOutlined","Button","htmlType","width","height","Step2","href","color","onClick","marginTop","paddingLeft","ConfigProvider","theme","token","colorPrimary","components","algorithm","borderRadius","className","maxWidth","margin","padding"],"sourceRoot":""}